user  nginx;  # worker进程运行的用户和组
worker_processes  1;  # 工作进程,一般按照CPU核心数量配置 CPU核心数+1

error_log  /var/log/nginx/error.log warn;  # 设置错误日志存放路径
pid        /var/run/nginx.pid;  # 记录Nginx主线程进程pid


events {  # 工作模式，连接配置,允许连接数量
    # use epoll;  # 可以不指定,默认epoll高效工作模式 还有poll、select标准模式
    worker_connections  1024;  # 定义nginx每个进程的最大连接数
}
# 如果允许一万设备连入,设置worker_processes为10, worker_connections为1000 10*1000就是1万了
# 一台Nginx最高允许5万设备连入,如果需要10万,就设置两台Nginx呗;100万就20台...
# 正向代理：连接数*进程数    反向代理：连接数*进程数/4(因为需要保持长连接)    linux限制最多65535，可解除ulimit -n 65535

http {  # http的配置
    include       /etc/nginx/mime.types;  # 网络传输允许的类型
    default_type  application/octet-stream;  # 设置默认类型为二进制流,文件类型未知就会使用默认

    # 日志格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;  # 设置访问日志存储位置

    sendfile        on;  # 设置高效文件传输模式
    #tcp_nopush     on;

    keepalive_timeout  65;  # 连接最长时间,超过自动断开

    #gzip  on;  # gzip压缩

    server {  # 指定虚拟主机
    	listen       80;  # 服务器port,监听这个窗口
    	server_name  localhost;  # 服务器ip或者域名,多个域名使用空格隔开
        # charset utf8;  # 指定网页的默认编码格式
        # error_page 500 502/50x.html  # 指定错误页面

        root /home/atea/PycharmProjects/FlaskRedSquirrel;
    	location /static {  # 路哟,url配置　　主要功能：定位url,解析url,支持正在匹配,还能支持条件,实现动静分离
        	# root   /home/atea/PycharmProjects/FlaskRedSquirrel;  # 指定虚拟主机的根目录
        	alias /home/atea/PycharmProjects/FlaskRedSquirrel/static;  # alias常用指令,别名,定义loaction的其他名字
        	index  index.html index.htm;  # 指定默认首页
    	}
    	location / {  # 路哟,url配置　　主要功能：定位url,解析url,支持正在匹配,还能支持条件,实现动静分离
        	include /etc/nginx/uwsgi_params;
        	uwsgi_pass 127.0.0.1:5000;
        	uwsgi_param UWSGI_PYHOME /home/atea/anaconda3/envs/FlaskRedSquirrel/bin;
        	uwsgi_param UWSGI_CHDIR /home/atea/PycharmProjects/FlaskRedSquirrel;
        	uwsgi_param UWSGI_SCRIPT manage:app;
        }
    }
}
